
Java'da Interface Nedir?

Interface, bir sınıfın hangi metotları uygulamak zorunda olduğunu belirleyen bir yapıdır.
Soyutlamayı destekleyerek, farklı sınıfların ortak davranışları paylaşmasını sağlar.
Bir interface, belirli metotları tanımlar ancak bunların içeriğini (gövdesini) belirlemez.

Metotlar ve Değişkenler:
- Interface içinde tanımlanan metotlar varsayılan olarak "public" ve "abstract"tır.
  Yani yalnızca metot imzaları bulunur, metotların içeriği olmaz.
- Interface'lerde tanımlanan değişkenler varsayılan olarak "public", "static" ve "final"dir.
  Yani, değişkenlerin değeri sabittir ve değiştirilemez.

Interface Uygulama (Implement):
- Bir sınıf, bir interface’i "implements" anahtar kelimesi ile uygulayabilir.
- Java'da bir sınıf birden fazla interface’i aynı anda uygulayabilir.
  Bu sayede Java, çoklu kalıtımı (multiple inheritance) dolaylı olarak destekler.

Varsayılan ve Statik Metotlar:
- Java 8 ile birlikte interface’ler içinde "default" (varsayılan) ve "static" metotlar tanımlanabilir.
- Default metotların gövdesi bulunur ve override edilmesi zorunlu değildir.
- Static metotlar doğrudan interface adıyla çağrılabilir ve override edilemez.

Interface ve Abstract Class Farkı:
- Interface’ler tamamen soyut yapılar sunarken, abstract class’lar hem soyut hem de somut metotlar içerebilir.
- Bir sınıf yalnızca bir abstract class’ı genişletebilir (extend edebilir),
  ancak birden fazla interface’i uygulayabilir (implement edebilir).

Nesne Oluşturma:
- Interface’ler doğrudan nesne oluşturmak için kullanılamaz.
  Ancak, interface’i uygulayan sınıflardan nesne oluşturulabilir.

Kullanım Amacı:
- Interface’ler, belirli bir davranışı farklı sınıflar arasında yaygınlaştırmak veya çoklu kalıtımı sağlamak amacıyla kullanılır.
- Kodun daha **esnek**, **modüler** ve **sürdürülebilir** olmasını sağlar.
